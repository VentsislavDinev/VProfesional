{
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "ReRoutes": [
    {
      "FileCacheOptions": {
        "TtlSeconds": 15,
        "Region": "somename"
      },
      "DownstreamPathTemplate": "/api/posts/{postId}",
      //In the example above a header with the key Uncle and value Bob would be returned by Ocelot when requesting the specific ReRoute.
      "DownstreamHeaderTransform": {
        "Uncle": "Bob",
        //The key is “Test” and the value is “http://www.bbc.co.uk/, http://ocelot.com/”. The value is saying replace http://www.bbc.co.uk/ with http://ocelot.com/. The syntax is {find}, {replace}. Hopefully pretty simple. There are examples below that explain more.
        "Test": "http://www.bbc.co.uk/, http://ocelot.com/",
        //Ocelot will by default automatically follow redirects however if you want to return the location header to the client you might want to change the location to be Ocelot not the downstream service.
        "Location": "http://www.bbc.co.uk/, http://ocelot.com/"
      },
      "UpstreamPathTemplate": "/posts/{postId}",
      // "UpstreamPathTemplate": "/{everything}",
      "UpstreamHttpMethod": [
        "Get"
      ],
      //  "DownstreamPathTemplate": "/api/subscriptions/{subscriptionId}/updates?unitId={unitId}",
      // "UpstreamPathTemplate": "/api/units/{subscriptionId}/{unitId}/updates",

      // "UpstreamHost": "somedomain.com"
      "Priority": 0,
      "AddHeadersToRequest": {},
      "AddClaimsToRequest": {},
      "RouteClaimsRequirement": { "UserType": "registered" },
      "AddQueriesToRequest": {},
      "RequestIdKey": "",
      "ReRouteIsCaseSensitive": true,
      "ServiceName": "",
      //If you want to add a header to your upstream request please add the following to a ReRoute in your ocelot.json:
      //In the example above a header with the key Uncle and value Bob would be send to to the upstream service.
      "UpstreamHeaderTransform": {
        "Uncle": "Bob"
      },
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 51876
        }
      ],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 0,
        "DurationOfBreak": 0,
        "TimeoutValue": 0
      },
      "LoadBalancer": "",
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": false,
        "Period": "",
        "PeriodTimespan": 0,
        "Limit": 0
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "TestKey",
        "AllowedScopes": []
      },
      "HttpHandlerOptions": {
        "AllowAutoRedirect": false,
        "UseCookieContainer": true,
        "UseTracing": true
      },
      "Key": "Laura",
      "DangerousAcceptAnyServerCertificateValidator": true
    },
    {
      "DownstreamPathTemplate": "/api/posts/{postId}",
      "UpstreamPathTemplate": "/posts/{postId}",
      // "UpstreamPathTemplate": "/{everything}",
      "UpstreamHttpMethod": [
        "Get"
      ],
      //  "DownstreamPathTemplate": "/api/subscriptions/{subscriptionId}/updates?unitId={unitId}",
      // "UpstreamPathTemplate": "/api/units/{subscriptionId}/{unitId}/updates",

      // "UpstreamHost": "somedomain.com"
      "Priority": 0,
      "AddHeadersToRequest": {},
      "AddClaimsToRequest": {},
      "RouteClaimsRequirement": {},
      "AddQueriesToRequest": {},
      "RequestIdKey": "",
      "FileCacheOptions": {
        "TtlSeconds": 0,
        "Region": ""
      },
      "ReRouteIsCaseSensitive": true,
      "ServiceName": "",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 51876
        }
      ],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 0,
        "DurationOfBreak": 0,
        "TimeoutValue": 0
      },
      "LoadBalancer": "",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": false,
        "Period": "",
        "PeriodTimespan": 0,
        "Limit": 0
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "",
        "AllowedScopes": []
      },
      "HttpHandlerOptions": {
        "AllowAutoRedirect": true,
        "UseCookieContainer": true,
        "UseTracing": true
      },

      "Key": "Laura",
      "DangerousAcceptAnyServerCertificateValidator": true
    }
  ],
  //"Aggregates": [
  //  {
  //    "ReRouteKeys": [
  //      "Tom",
  //      "Laura"
  //    ],
  //    "UpstreamPathTemplate": "/",
  //    "Aggregator": "FakeDefinedAggregator"
  //  }
  //],
  "DynamicReRoutes": [
    {
      "ServiceName": "product",
      "RateLimitRule": {
        "ClientWhitelist": [],
        "EnableRateLimiting": true,
        "Period": "1s",
        "PeriodTimespan": 1000.0,
        "Limit": 3
      }
    }
  ],
  "GlobalConfiguration": {
    "RequestIdKey": null,
    "BaseUrl": "https://api.mybusiness.com",
    "ServiceDiscoveryProvider": {
      "Host": "localhost",
      "Port": 9500,
      "Type": "Consul",
      "PollingInterval": 100,
      "Token": "footoken",
      "ConfigurationKey": "Oceolot_A"
    },
    "RateLimitOptions": {
      "ClientIdHeader": "ClientId",
      "QuotaExceededMessage": null,
      "RateLimitCounterPrefix": "ocelot",
      "DisableRateLimitHeaders": false,
      "HttpStatusCode": 429
    },
    "QoSOptions": {
      "ExceptionsAllowedBeforeBreaking": 0,
      "DurationOfBreak": 0,
      "TimeoutValue": 0
    },
    "LoadBalancerOptions": {
      "Type": "LeastConnection",
      "Key": null,
      "Expiry": 0
    },
    "DownstreamScheme": "http",
    "HttpHandlerOptions": {
      "AllowAutoRedirect": false,
      "UseCookieContainer": false,
      "UseTracing": false
    }

  },
  //"RateLimitOptions": {
  //  "DisableRateLimitHeaders": false,
  //  "QuotaExceededMessage": "Customize Tips!",
  //  "HttpStatusCode": 999,
  //  "ClientIdHeader": "Test"
  //},
  "AllowedHosts": "*"
}
